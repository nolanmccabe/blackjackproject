#include "stdafx.h"

#include <iostream>
#include <conio.h>
#include <string>

using namespace std;


int answer;
string s1 = "|";
string s2 = "              |";
string s3 = " ______________";
string s4 = "           |";
string s5 = "|           ";
string s6 = "|";
string s7 = "|______________|";
string s8 = "  *  *  *  *  ";
string s9 = "    *  *  *   ";

void calculations()
{

	switch (answer)
	{
	case 1:
		cout << s3 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << "  J" << s4 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << s2 << "\n";
		cout << s5 << "J  " << s6 << "\n";
		cout << s7 << "\n";
		break;

	case 2:
			cout << s3 << "   " << s3 << "\n";
			cout << s1 << s2 << "  " << s1 << s2 << "\n";
			cout << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "\n";
			cout << s1 << s2 << "  " << s1 << s2 << "\n";
			cout << s1 << s2 << "  " << s1 << s2 << "\n";
			cout << s1 << s2 << "  " << s1 << s2 << "\n";
			cout << s1 << s2 << "  " << s1 << s2 << "\n";
			cout << s1 << s2 << "  " << s1 << s2 << "\n";
			cout << s1 << s2 << "  " << s1 << s2 << "\n";
			cout << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "\n";
			cout << s7 << "  " << s7 << "\n";
		break;

	case 3:
		cout << s3 << "   " << s3 << "   " << s3 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "\n";
		cout << s7 << "  " << s7 << "  " << s7 << "\n";
		break;

	case 4:
		cout << s3 << "   " << s3 << "   " << s3 << "   " << s3 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "\n";
		cout << s7 << "  " << s7 << "  " << s7 << "  " << s7 << "\n";
		break;

	case 5:
		cout << s3 << "   " << s3 << "   " << s3 << "   " << s3 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "\n";
		cout << s7 << "  " << s7 << "  " << s7 << "  " << s7 << "\n";
		
		cout << endl;
		
		cout << s3 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << "  J" << s4 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << s2 << "\n";
		cout << s1 << s2 << "\n";
		cout << s5 << "J  " << s6 << "\n";
		cout << s7 << "\n"; 
		break;

	case 6:
		cout << s3 << "   " << s3 << "   " << s3 << "   " << s3 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "\n";
		cout << s7 << "  " << s7 << "  " << s7 << "  " << s7 << "\n";
		
		cout << endl;

		cout << s3 << "   " << s3 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "\n";
		cout << s7 << "  " << s7 << "\n";
		break;
	
	case 7:
		cout << s3 << "   " << s3 << "   " << s3 << "   " << s3 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "\n";
		cout << s7 << "  " << s7 << "  " << s7 << "  " << s7 << "\n";

		cout << endl;

		cout << s3 << "   " << s3 << "   " << s3 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "\n";
		cout << s7 << "  " << s7 << "  " << s7 << "\n";
		break;

	case 8:
		cout << s3 << "   " << s3 << "   " << s3 << "   " << s3 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "\n";
		cout << s7 << "  " << s7 << "  " << s7 << "  " << s7 << "\n";

		cout << endl;

		cout << s3 << "   " << s3 << "   " << s3 << "   " << s3 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "  " << s1 << "  J" << s4 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "  " << s1 << s2 << "\n";
		cout << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "  " << s5 << "J  " << s6 << "\n";
		cout << s7 << "  " << s7 << "  " << s7 << "  " << s7 << "\n";
		break;

	case 9:
		cout << "You have folded ):" << endl;
		break;

	case 10:
		cout << "You chose to stay. May the odds be forever in your forever." << endl;
	default:
		cout << "Bad choice! Please try again: \n";
		break;
	}
}

int main()
{
	bool keepLooping = true;

	while (keepLooping)
	{

		cout << "Press 1 to hit." << endl;
		cout << "Press 9 to fold." << endl;
		cout << "Press 10 to stay." << endl;

		cin >> answer;

		calculations();

		if (answer < 1 || answer > 10)
			keepLooping = true;
		else
			keepLooping = false;

	}


	_getch();
	return answer;

}
